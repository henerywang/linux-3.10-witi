#
#
#

SRC_APP=source
SRC_UTILS=source/utils


# Include Paths
INCLUDE_APP:= \
 -I$(obj)/include


INCLUDE_FLAGS_ALL:= \
  $(INCLUDE_APP)


# Compiler Flags
WARNING_FLAGS=
DEBUG_FLAGS=-g
CODE_COVERAGE_FLAGS=
PROFILING_FLAGS=
BACKWARD_COMPATIBILITY_FLAGS=

EXTRA_CFLAGS += $(BACKWARD_COMPATIBILITY_FLAGS)
EXTRA_CFLAGS += $(INCLUDE_FLAGS_ALL)
EXTRA_CFLAGS += $(WARNING_FLAGS)
EXTRA_CFLAGS += $(DEBUG_FLAGS)
EXTRA_CFLAGS += $(CODE_COVERAGE_FLAGS)
EXTRA_CFLAGS += $(PROFILING_FLAGS)
EXTRA_CFLAGS += -DRT_EIP93_DRIVER
EXTRA_CFLAGS += -DRT_EIP93_DRIVER_DEBUG -DRT_EIP93_DRIVER_DEBUG_H
EXTRA_CFLAGS += -DMTK_CRYPTO_DRIVER
#EXTRA_CFLAGS += -I$(MODULES_KPROFILE_DIR)
#EXTRA_CFLAGS += -DEXPORT_SYMTAB -D__KERNEL_SYSCALLS__

ifeq ($(CONFIG_RA_NETWORK_WORKQUEUE_BH),y)
EXTRA_CFLAGS   += -DWORKQUEUE_BH
endif

obj-$(CONFIG_RALINK_HWCRYPTO) += crypto_k.o
crypto_k-objs:= \
	$(SRC_UTILS)/mtk_sLib.o \
	$(SRC_UTILS)/mtk_arm.o \
	$(SRC_UTILS)/mtk_ringHelper.o \
	$(SRC_UTILS)/mtk_hwDevice.o \
	$(SRC_UTILS)/mtk_hwDmaResource.o \
	$(SRC_UTILS)/mtk_dmaBufHelper.o \
	$(SRC_APP)/mtk_pktProcess.o \
	$(SRC_APP)/mtk_eip93Init.o \
	$(SRC_APP)/mtk_pecInit.o \
	$(SRC_APP)/mtk_interruptHelper.o \
	$(SRC_APP)/mtk_init.o
